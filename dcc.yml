---
swagger: '2.0'
info:
  title: Raiffeisenbank cards API
  x-logo:
    url: images/raifflogo.png
    backgroundColor: '#FFFFFF'
    altText: Raiff logo
  description: |

    Автоматизированный выпуск карт с помощью API или реестра. Это позволит вам выпускать корпоративные карты без документов и паспортов. Отправляйте нам список держателей реестром через банк-клиент или по API — мы выпустим вам карты.

    # Реестр
    1. Отправляйте список сотрудников через интернет-банк в формате CSV или XML.
       Список сотрудников можете заполнять вручную или выгружать из вашей учетной системы.
    2. Через 3-5 дней карты доставят в отделение банка. Держатели получат СМС о готовности карты.

    ## Формат реестра
      [xml реестр пример 1](images/xml_registry1.xml)
      [xml реестр пример 2](images/xml_registry2.xml)
      [csv реестр пример](images/csv_registry.csv)

      Наименование параметра | Значение
      --------|------------------
      ИдПервичногоДокумента | Уникальный идентификатор реестра на стороне Компании
      РасчетныйСчетОрганизации | Счёт Компании, открытый в Банке, к которому будут созданы карты
      ВидВклада/КодВидаВклада | Тип карт(MC_CORPORATE/ VISA_CORPORATE/VISA_PREMIUM/ VISA_PLATINUM/CASH_IN/ CASH_IN&OUT/VISA_ADM)
      Фамилия | Фамилия сотрудника-держателя, которому будет создана карта
      Имя | Имя сотрудника-держателя, которому будет создана карта
      Отчество | Отчество сотрудника-держателя, которому будет создана карта
      ЭмбоссированныйТекст | Имя и фамилия сотрудника-держателя латиницей, которые будет напечатаны на карте
      ОтделениеБанка/ ФилиалОтделенияБанка | Код отделения Банка, куда будут доставлены карты
      Пол | Пол сотрудника-держателя, которому создаётся карта
      ДатаРождения | Дата рождения
      МестоРождения.СтранаНазвание | Страна рождения
      Серия | Серия паспорта РФ
      Номер | Номер паспорта РФ
      ДатаВыдачи | Дата выдачи паспорта РФ
      КемВыдан | Кем выдан паспорт РФ
      Гражданство | Гражданство
      АдресПрописки.Страна | Страна прописки
      АдресПрописки.РегионНазвание | Регион адреса прописки
      АдресПрописки. НаселенныйПунктНазвание | Населенный пункт адреса прописки
      АдресПрописки.УлицаНазвание | Улица адреса прописки(при отсутствии указать Нет)
      АдресПрописки.Дом | Дом адреса прописки(при отсутствии указать Нет)
      МобильныйТелефон | Мобильный телефон сотрудника-держателя(79210000001 или 9210000001)
      Суточный лимит(только в csv формате) | Суточный лимит на снятие наличных
      Месячный лимит(только в csv формате) | Ежемесячный общий расходный лимит
      Секретное слово(только в csv формате) | Секретное слово держателя карты

    ## Инструкция по выгрузке реестра из 1С
    [Инструкция по выгрузке реестра из 1С](https://docs.google.com/document/d/1xk9q9MDW1qx9oqQI64FF9PUBdShuLc-rgYuciY2SbzI)

    ## Список отделений для получения карт
    [Список отделений для получения карт](https://docs.google.com/spreadsheets/d/1lT-qOCGrAW7u9IFn8tDWwO1bnUt_gNPEncINGvVVbKE)

    # Об API
    После заключения договора вам придет письмо о подключении к сервису с авторизационными данными.
    1. Интегрируйте наш API с вашей учетной системой.
    2. Отправляйте список сотрудников.
    3. Проверяйте статус готовности карт.
    4. Через 3-5 дней карты доставят в отделение банка. Держатели получат СМС о готовности карты.

        Взаимодействие осуществляется по протоколу HTTP с использованием методов GET/POST (в описании каждого запроса явно указан требуемый метод и адрес).
        POST-запросы используют JSON-аргументы, GET-запросы работают со строками запросов.
        API всегда возвращает ответ в формате JSON, независимо от типа запроса.
        Ответ любого метода содержит код сообщения (code). Если в процессе обработки любого запроса произойдет логическая ошибка, API вернет дополнительно описание ошибки (message).

    ## Авторизация

    Для авторизация запросов необходимы:
    * secretKey - секретный ключ, который используется для межсервисного взаимодействия.

    ВАЖНО: Секретный ключ необходимо хранить в защищенном месте, нельзя публиковать на сторонних ресурсах или передавать третьим лицам.

    Межсервисные запросы авторизуются посредством секретного ключа API (SECRET_KEY). Параметр авторизации указывается в заголовке Authorization, значение которого формируется как "Bearer SECRET_KEY".

servers:
  - url: https://pay.raif.ru
    description: Production API (uses live data)
  - url: https://pay-test.raif.ru
    description: Sandbox API
tags:
  - name: corpcards-api
    x-displayName: 'Выпуск карт'
    description: |
      Для реализации взаимодействия Райффайзенбанк предоставляет API:
      * получение списка отделений для выдачи карт
      * запрос на создание карт с ипользованием HTTP;
      * получение информации о статусе запроса на создание карт.

  - name: callback-api
    x-displayName: 'Уведомления об операциях'
    description: |
      Для информирования Компании о проведенных операциях по картам могут использоваться уведомления на адрес, указанный в настройках.
      В составе API имеется следующий функционал:
      * уведомление о блокировке средств на карте(статус HOLD);
      * уведомление о списании средств по счету(статус CAPTURE);
      * запрос на отправку уведомления в тестовом контуре с иcпользованием HTTP;

      Взаимодействия осуществляются через протокол HTTP посредством метода POST как для исходящих из банка сообщений, так и для входящих.

      Адрес для тестовой и боевой среды можно указать с помощью [метода в API](#operation/postsettingsUrl).

      Для партнёра уведомление представляет собой входящий POST-запрос, который использует JSON-структуру.

      Уведомление считается принятым, если получатель ответил на запрос кодом HTTP 200.

      Ответы с любыми другими HTTP-кодами будут считаться невалидными. Повторные попытки отправки будут проводиться в течение суток с нарастающим интервалом.

      Для проверки подлинности уведомления к данным добавляется подпись в заголовке  x-api-signature-sha256, полученная на основе общего секретного ключа и контрольной строки (amount|cardId|creationDate|id|type) с помощью HMAC-SHA-256.

  - name: Errors
    x-displayName: 'Справочник ошибок'
    description: |
      Ответ любого метода содержит код сообщения (code). Если в процессе обработки любого запроса произойдет логическая ошибка, API вернет описание ошибки (message).

      Описание основных ошибок:

      HTTP-код | code | message | Комментарий
      --------|------------------|-----------------------------------|-----------------------------
      200 | SUCCESS | Запрос обработан успешно | Успешное выполнение запроса без логических и системных сбоев
      200 | ERROR.Код_ошибки | Текстовое сообщение о сути ошибки | Логическая ошибка при выполнении запроса
      500 | ERROR.INTERNAL | Ошибка | Системная ошибка при выполнении запроса

  - name: Feedback
    x-displayName: 'Обратная связь'
    description: |
      Свои предложения и идеи о документации можно оставить в репозитории по адресу: https://github.com/Raiffeisen-DGTL/ecom-API/blob/master/dcc.yml.

paths:
  /api/cards/v1/bank/branch:
    get:
      tags:
        - corpcards-api
      summary: Получение списка отделений для выдачи карт
      operationId: getBranch
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          schema:
            "$ref": '#/definitions/responses/getBranch'

  /api/cards/v1/corporate-cards/ -H "Authorization :Bearer SecretKey":
    post:
      tags:
        - corpcards-api
      summary: Запрос на создание карт
      operationId: cardsBatch
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer secret key
          required: true
        - in: body
          name: cardsBatch
          description: cardsBatch
          required: true
          schema:
            "$ref": '#/definitions/schemas/cardsBatchRequest'
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/EmptyBody"
        '400':
          description: Ошибка валидации
          schema:
            "$ref": '#/definitions/cardsBatchErrorResponse'

  /api/cards/v1/corporate-cards/{batchId} -H "Authorization :Bearer SecretKey":
    get:
      tags:
        - corpcards-api
      summary: Получение информации о статусе запроса на создание карт.
      operationId: cardsBatchStatus
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer secret key
          required: true
        - in: path
          name: batchId
          type: string
          description: Уникальный идентификатор пакета, по которому нужно получить статус.
          required: true
      responses:
        '200':
          description: OK
          schema:
            "$ref": '#/definitions/batchCardStatusResponse'

  <URL обработчика уведомлений на стороне партнёра>:
    post:
      tags:
        - callback-api
      summary: Уведомление об операциях по картам
      operationId: sendCallback
      consumes:
        - application/json;charset=UTF-8
      parameters:
        - name: Callback
          in: body
          description: Callback
          required: true
          schema:
            "$ref": "#/definitions/Callback"
      responses:
        200:
          description: Ответ.
          schema:
            "$ref": "#/definitions/EmptyBody"
      deprecated: false

  /api/cards/v1/callback/settings/:
    post:
      tags:
        - callback-api
      summary: Установка URL для уведомлений
      operationId: postsettingsUrl
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer secret key
          required: true
        - in: body
          name: url
          description: URL для приема уведомлений
          required: true
          schema:
            "$ref": "#/definitions/CallBackSettings"
      responses:
        "200":
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/EmptyBody"
        "400":
          description: Ответ с неуспешным результатом.
          schema:
            "$ref": "#/definitions/CallBackSettingsBadRequest"
        "401":
          description: Ответ с неуспешным результатом.
          schema:
            "$ref": "#/definitions/CallBackSettingsUnauthorized"
        "500":
          description: Ответ с неуспешным результатом.
          schema:
            "$ref": "#/definitions/CallBackSettingsInternalServerError"
      deprecated: false

  /api/cards/v1/callback/send-message:
    post:
      tags:
        - callback-api
      summary: Запрос на получение тестового сообщения в интеграционной среде
      operationId: sendTestCallback
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: body
          name: statusValue
          required: true
          schema:
            "$ref": "#/definitions/TestCallBackSettings"
        - in: body
          name: url
          description: URL для приема уведомлений
          required: true
          schema:
            "$ref": "#/definitions/TestCallBackSettings"
      responses:
        "200":
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/EmptyBody"
        "400":
          description: Ответ с неуспешным результатом.
          schema:
            "$ref": "#/definitions/CallBackSendMessageBadRequest"

definitions:
  securitySchemes:
    SECRET_KEY:
      type: http
      scheme: bearer
      description: ''
  schemas:
    cardsBatchRequest:
      type: object
      properties:
        batchId:
          type: string
          description: Уникальный идентификатор пакета.
          maxLength: 36
          example: 'd780dd10-3276-4d0b-afd0-29e271491e24'
        cards:
          type: array
          description: Список карт на выпуск.
          items:
            $ref: '#/definitions/schemas/batchCard'
          title: cards
    batchCard:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор запроса на выпуск карты.
          maxLength: 36
          example: 'c130bc10-3286-4d0b-afd0-29e271491e13'
        account:
          type: string
          description: Номер счета.
          maxLength: 20
          minLength: 20
          example: '40702810603000060801'
        product:
          type: string
          description: Тип карты. Возможные значения указаны в Enum
          enum:
            - MC_CORPORATE
            - VISA_CORPORATE
            - VISA_PREMIUM
            - VISA_PLATINUM
            - CASH_IN
            - CASH_IN&OUT
            - VISA_ADM
          example: 'VISA_CORPORATE'
        dailyLimit:
          type: string
          description: Ежедневный лимит на снятие наличных по карте в рублях. Строка с целым числом. Необязательное поле, по умолчанию устанавливается в соответствии с типом карты.
          example: '500'
        monthlyLimit:
          type: string
          description: Ежемесячный общий расходный лимит по карте в рублях. Строка с целым числом. Необязательное поле, по умолчанию устанавливается в соответствии с типом карты.
          example: '5000'
        deliveryAddress:
          type: object
          description: Информация об адресе доставки карты. Необязательный блок.
          properties:
            countryOfRegistrationIsoCode:
              type: string
              description: Страна адреса доставки(ISO).
              example: '643'
            region:
              type: string
              description: Регион адреса доставки.
              example: 'Москва'
            city:
              type: string
              description: Населенный пункт адреса доставки.
              example: 'Москва'
            street:
              type: string
              description: Улица адреса доставки.
              example: 'Октябрьская'
            house:
              type: string
              description: Номер дома адреса доставки.
              example: '84'
            building:
              type: string
              description: Номер строения адреса доставки. Необязательное поле.
              example: '3'
        person:
          type: object
          description: Данные держателя карты
          properties:
            surname:
              type: string
              description: Фамилия.
              example: 'Тестов'
            name:
              type: string
              description: Имя.
              example: 'Тест'
            patronymic:
              type: string
              description: Отчество.
              example: 'Тестович'
            birthday:
              type: string
              format: YYYY-MM-DD
              description: Дата рождения.
              example: '1980-01-30'
            gender:
              type: string
              description: Пол.
              enum:
                - MALE
                - FEMALE
              example: 'MALE'
            cellPhone:
              type: string
              description: Номер мобильного телефона, используется для смс-информирования и активации карты.
              example: '79123456789'
            transcriptFullName:
              type: string
              description: ФИО в альтернативной транскрипции. Необязательное поле.
              example: 'Testov Test Testovich'
            branchId:
              type: string
              description: 3-х значный цифровой код отделения Банка, куда будет доставлена карта.
              example: '203'
            citizenshipCode:
              type: string
              description: Код страны гражданства (ISO). Необязательное поле. По умолчанию 643.
              example: '643'
            secretWord:
              type: string
              description: Кодовое слово. Необязательное поле.
              example: 'itsmysecret'
            passport:
              type: object
              description: Информация о паспорте РФ держателя карты.
              properties:
                series:
                  type: string
                  description: Серия документа.
                  example: '1234'
                number:
                  type: string
                  description: Номер документа.
                  example: '123456'
                issuedBy:
                  type: string
                  description: Кем выдан документ.
                  example: 'ОУФМС по МО в городском округе Серпухов'
                issuedDate:
                  type: string
                  format: YYYY-MM-DD
                  description: Дата выдачи документа.
                  example: '2010-01-30'
                countryOfBirthIsoCode:
                  type: string
                  description: Код страны рождения(ISO).
                  example: '643'
            address:
              type: object
              description: Информация об адресе держателя карты.
              properties:
                countryOfRegistrationIsoCode:
                  type: string
                  description: Страна адреса прописки(ISO).
                  example: '643'
                region:
                  type: string
                  description: Регион адреса прописки.
                  example: 'Москва'
                city:
                  type: string
                  description: Населенный пункт адреса прописки.
                  example: 'Москва'
                street:
                  type: string
                  description: Улица адреса прописки.
                  example: 'Октябрьская'
                house:
                  type: string
                  description: Номер дома адреса прописки.
                  example: '84'
                building:
                  type: string
                  description: Номер строения адреса прописки. Необязательное поле.
                  example: '3'
    sendCallbackRequest:
      type: object
      properties:
        type:
          type: string
          descripttion: Тип уведомления.
          enum:
            - HOLD
            - CAPTURE
          example: CAPTURE
        url:
          type: string
          description: URL для отправки уведомления.
          example: 'https://yoururl.ru'

  responses:
    getBranch:
      type: array
      description: Список отделений
      items:
        $ref: '#/definitions/responses/branch'
      title: getBranch
    branch:
      type: object
      properties:
        branchId:
          type: string
          description: 3-х значный цифровой код Отделения Банка.
          example: '740'
        name:
          type: string
          description: Название Отделения Банка
          example: 'Отделение "Домодедово"'
        city:
          type: string
          description: Город местонахождения Отделения Банка
          example: 'Москва'
        address:
          type: string
          description: Адрес местонахождения Отделения Банка
          example: 'г.Домодедово ул.Корнеева д.12'
  cardsBatchErrorResponse:
    type: object
    properties:
      code:
        type: string
        description: Код ошибки.
        example: 'ERROR.INVALID_DATA'
      message:
        type: string
        description: Текст ошибки.
        example: 'Некорректные данные'
      errors:
        type: array
        description: Ошибки, возникшие при валидации запроса.
        items:
          $ref: '#/definitions/batchValidationError'
        title: errors
  batchValidationError:
    type: object
    properties:
      id:
        type: string
        description: Уникальный идентификатор запроса на выпуск карты.
        example: 'c130bc10-3286-4d0b-afd0-29e271491e13'
      invalidFields:
        type: array
        description: Массив со списком полей.
        items:
          type: string
          example: ['account', 'person.birthday', 'person.passport.series']

  batchCardStatusResponse:
    type: array
    description: Массив со списком карт и их статусами.
    items:
      type: object
      description: Информация по карте.
      properties:
        id:
          type: string
          description: Уникальный идентификатор запроса на выпуск карты.
          example: 'c130bc10-3286-4d0b-afd0-29e271491e13'
        cardId:
          type: string
          description: Уникальный банковский идентификатор карты.
          example: '12345678'
        account:
          type: string
          description: Номер счета.
          example: '40702810603000060801'
        product:
          type: string
          description: Тип карты. Возможные значения указаны в enum
          enum:
            - MC_CORPORATE
            - VISA_CORPORATE
            - VISA_PREMIUM
            - VISA_PLATINUM
            - CASH_IN
            - CASH_IN&OUT
            - VISA_ADM
          example: 'VISA_CORPORATE'
        dailyLimit:
          type: string
          description: Ежедневный лимит на снятие наличных по карте в рублях. Строка с целым числом. Необязательное поле, по умолчанию устанавливается в соответствии с типом карты.
          example: '500'
        monthlyLimit:
          type: string
          description: Ежемесячный общий расходный лимит по карте в рублях. Строка с целым числом. Необязательное поле, по умолчанию устанавливается в соответствии с типом карты.
          example: '5000'
        status:
          type: object
          description: Статус по карте.
          properties:
            value:
              type: string
              description: Код статуса.
              enum:
                - IN_PROGRESS
                - SUCCESS
                - REJECTED
              example: 'IN_PROGRESS'
            description:
              type: string
              description: Описание статуса.
              example: 'В обработке'
            dateTime:
              type: YYYY-MM-DD ТHH24:MM:SS
              description: Дата и время обновления.
              example: '2020-01-15T16:01:49.043924'
        person:
          type: object
          description: Информация по держателю карты.
          properties:
            companyId:
              type: string
              description: CNUM компании
              example: 'HBA23K'
            maskedName:
              type: string
              description: Фамилия и инициалы.
              example: 'Тестов Т.Т.'
            birthday:
              type: string
              description: Дата рождения.
              format: YYYY-MM-DD
              example: '1980.01.30'
            gender:
              type: string
              description: Пол держателя карты.
              enum:
                - MALE
                - FEMALE
              example: 'MALE'
            maskedCellPhone:
              type: string
              description: Маскированный номер телефона.
              example: '7916***4567'
            branchId:
              type: string
              description: 3-х значный цифровой код отделения Банка, куда будет доставлена карта.
              example: '603'
            passport:
              type: object
              description: Информация о паспорте держателя карты.
              properties:
                maskedSeries:
                  type: string
                  description: Маскировання серия паспорта.
                  example: '1*3*'
                maskedNumber:
                  type: string
                  description: Маскированный номер паспорта.
                  example: '1***56'
                issuedDate:
                  type: string
                  format: YYYY-MM-DD
                  description: Дата выдачи паспорта.
                  example: '2012-10-22'

  CallBackSettings:
    type: object
    allOf:
      - $ref: "#/definitions/CallBackSettings"
    required:
      - url
    properties:
      url:
        type: string
        description: URL, куда требуется отправлять уведомления по всем статусам.
        example: 'https://yoururl.ru'
      statusValues:
        type: array
        description: Статус операции. Необязательный параметр, если не отправить, то URL будет указан для всех статусов.
        items:
          type: string
          enum:
            - HOLD
            - CAPTURE
          example: 'HOLD'
  TestCallBackSettings:
    type: object
    allOf:
      - $ref: "#/definitions/TestCallBackSettings"
    required:
      - statusValue
      - url
    properties:
      url:
        type: string
        description: URL, куда требуется отправить сформированное уведомление.
        example: 'https://yoururl.ru'
      statusValue:
        type: string
        description: Статус операции, по которому будет сформировано и отправлено тестовое сообщение
        enum:
          - HOLD
          - CAPTURE
        example: 'HOLD'
  CallBackSettingsUnauthorized:
    type: object
    properties:
      timestamp:
        type: YYYY-MM-DD ТHH24:MM:SS±HH:MM
        description: Дата и время операции
        example: '2020-01-15T16:01:49.043924+03:00'
      status:
        type: string
        description: HTTP-код
        example: '401'
      error:
        type: string
        description: Ошибка
        example: 'Unauthorized'
      message:
        type: string
        description: 'Описание ошибки'
        example: ''
      path:
        type: string
        description: URL, по которому была вызвана ошибка
        example: '/api/cards/v1/callback/settings/'
    title: CallBackSettingsUnauthorized
  CallBackSettingsBadRequest:
    type: object
    properties:
      code:
        type: string
        description: Код ошибки
        example: 'ERROR.INVALID_URL'
      message:
        type: string
        description: Описание ошибки
        example: 'URL Protocol should be http or https'
    title: CallBackSettingsBadRequest
  CallBackSettingsInternalServerError:
    type: object
    properties:
      timestamp:
        type: YYYY-MM-DD ТHH24:MM:SS±HH:MM
        description: Дата и время операции
        example: '2020-01-15T16:01:49.043924+03:00'
      status:
        type: string
        description: HTTP-код
        example: '500'
      error:
        type: string
        description: Ошибка
        example: 'Internal Server Error'
      message:
        type: string
        description: 'Описание ошибки'
        example: ''
      path:
        type: string
        description: URL, по которому была вызвана ошибка
        example: '/api/cards/v1/callback/settings/'
    title: CallBackSettingsInternalServerError
  CallBackSendMessageBadRequest:
    type: object
    properties:
      code:
        type: string
        description: Код ошибки
        example: 'ERROR.INVALID_STATUS'
      message:
        type: string
        description: Описание ошибки
        example: 'Status value should be HOLD or CAPTURE, actual status is null'
    title: CallBackSendMessageBadRequest
  Callback:
    type: object
    discriminator:
      mapping:
  EmptyBody:
    type: object
  HOLD:
    type: object
    allOf:
      - $ref: "#/definitions/Callback"
    required:
      - event
    properties:
      event:
        type: string
        description: Тип события
        enum:
          - DCC.OPERATION
        example: DCC.OPERATION
      clientId:
        type: string
        description: Id компании(CNUM)
        example: 'CNUM01'
      operation:
        type: object
        required:
          - id
          - accountMovementType
          - created
          - authorization
          - status
          - card
          - merchant
        properties:
          id:
            type: string
            description: Идентификатор операции в Райффайзенбанке
            example: 'be313e48-c501-58e6-be55-422498c7d86f'
          accountMovementType:
            type: string
            description: Операция списания(DEBIT)/зачисления(CREDIT) денежных средств
            enum:
              - DEBIT
              - CREDIT
            example: 'DEBIT'
          created:
            type: YYYY-MM-DD ТHH24:MM:SS±HH:MM
            description: Дата и время обработки операции
            maxLength:
            example: '2020-01-15T16:01:49.043924+03:00'
          authorization:
            type: object
            required:
              - amount
              - currency
            properties:
              amount:
                type: number
                description: Сумма операции
                example: 20.88
              currency:
                type: string
                description: Валюта операции
                example: 'EUR'
          status:
            type: object
            required:
              - value
              - dateTime
            properties:
              value:
                type: string
                description: Статус
                enum:
                  - HOLD
                example: HOLD
              dateTime:
                type: YYYY-MM-DD ТHH24:MM:SS±HH:MM
                description: Дата и время операции
                maxLength:
                example: '2020-01-15T16:01:49.043924+03:00'
          card:
            type: object
            required:
              - id
              - maskedNumber
            properties:
              id:
                type: string
                description: Внутрибанковский уникальный идентификатор карты
                maxLength: 8
                example: 14901823
              maskedNumber:
                type: string
                description: Маскированный номер карты
                maxLength: 16
                example: '553496******0091'
          merchant:
            type: object
            required:
              - mcc
              - label
              - name
              - city
              - country
            properties:
              mcc:
                type: string
                description: MCC — код вида торговой точки
                maxLength: 4
                example: 5499
              label:
                type: string
                description: Расшифровка MCC
                example: 'Различные продовольственные магазины'
              name:
                type: string
                description: Название торговой точки
                example: 'ГАСТРОНОМ'
              city:
                type: string
                description: Город торговой точки
                example: 'RYAZAN'
              country:
                type: string
                description: Страна торговой точки
                example: 'RU'
    title: Уведомление о платеже
  CAPTURE:
    type: object
    allOf:
      - $ref: "#/definitions/Callback"
    required:
      - event
    properties:
      event:
        type: string
        description: Тип события
        enum:
          - DCC.OPERATION
        example: DCC.OPERATION
      clientId:
        type: string
        description: Id компании(CNUM)
        example: 'CNUM01'
      operation:
        type: object
        required:
          - id
          - accountMovementType
          - created
          - authorization
          - status
          - transaction
          - card
          - merchant
        properties:
          id:
            type: string
            description: Идентификатор операции в Райффайзенбанке
            example: 'be313e48-c501-58e6-be55-422498c7d86f'
          accountMovementType:
            type: string
            description: Операция списания(DEBIT)/зачисления(CREDIT) денежных средств
            enum:
              - DEBIT
              - CREDIT
            example: 'DEBIT'
          created:
            type: YYYY-MM-DD ТHH24:MM:SS±HH:MM
            description: Дата и время обработки операции
            maxLength:
            example: '2020-01-15T16:01:49.043924+03:00'
          authorization:
            type: object
            required:
              - amount
              - currency
            properties:
              amount:
                type: number
                description: Сумма операции
                example: 20.88
              currency:
                type: string
                description: Валюта операции
                example: 'EUR'
          status:
            type: object
            required:
              - value
              - dateTime
            properties:
              value:
                type: string
                description: Статус
                enum:
                  - CAPTURE
                example: CAPTURE
              dateTime:
                type: YYYY-MM-DD ТHH24:MM:SS±HH:MM
                description: Дата и время операции
                maxLength:
                example: '2020-01-15T16:01:49.043924+03:00'
          transaction:
            type: object
            required:
              - amount
              - currency
            properties:
              amount:
                type: number
                description: Сумма списания по счету
                example: 1439.88
              currency:
                type: string
                description: Валюта списания по счету
                example: 'RUB'
          card:
            type: object
            required:
              - id
              - maskedNumber
            properties:
              id:
                type: string
                description: Внутрибанковский уникальный идентификатор карты
                maxLength: 8
                example: 14901823
              maskedNumber:
                type: string
                description: Маскированный номер карты
                maxLength: 16
                example: '553496******0091'
          merchant:
            type: object
            required:
              - mcc
              - label
              - name
              - city
              - country
            properties:
              mcc:
                type: string
                description: MCC — код вида торговой точки
                maxLength: 4
                example: 5499
              label:
                type: string
                description: Расшифровка MCC
                example: 'Различные продовольственные магазины'
              name:
                type: string
                description: Название торговой точки
                example: 'ГАСТРОНОМ'
              city:
                type: string
                description: Город торговой точки
                example: 'RYAZAN'
              country:
                type: string
                description: Страна торговой точки
                example: 'RU'
    title: Уведомление о платеже
