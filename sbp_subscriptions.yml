---
swagger: '2.0'
info:
  title: API интеграции Системы Быстрых Платежей (СБП)
  contact: {
    email: ecom@raiffeisen.ru,
    name: Support e-mail
  }
  x-logo:
    url: images/raifflogo.png
    backgroundColor: '#FFFFFF'
    altText: Raiff logo
  description: |

    Свои предложения и идеи о документации можно оставить в репозитории по адресу: https://github.com/Raiffeisen-DGTL/ecom-API/blob/master/sbp.yml

    # Подключение к СБП

    Для приема СБП-платежей оставьте заявку на [сайте.](https://www.raiffeisen.ru/corporate/management/sbp/)

    Райффайзенбанк выполнит регистрацию.
    После завершения процесса вы будете оповещены на электронную почту.

    ## Участники СБП

    ### Покупатель
    * выбирает в ПО партнёра услуги/товары и пункт «Оплата через СБП» (опционально)
    * сканирует QR-код, предоставленный партнёром, и подтверждает платеж в приложении своего банка
    * получает результат платежа и оплаченную услуги/товары

    ### Партнёр
    * запрашивает формирование QR-кода для выбранных товаров/услуг (корзины)
    * отображает QR-код клиенту для сканирования и произведения оплаты
    * обрабатывает уведомления о результатах СБП-операций
    * запрашивает данные по платежу (опционально)
    * обеспечивает выдачу товаров/услуг покупателю по факту платежа

    ### Райффайзенбанк
    * предоставляет интерфейс для запроса QR-кода со стороны партнёра
    * обеспечивает перевод денежных средств на счет партнёра по факту расчетов в СБП
    * определяет формат уведомления о факте СБП-платежа
    * предоставляет интерфейс для получения данных по платежу

    ## Поддержка 54-ФЗ

    Мы не ограничиваем в выборе решения по фискализации, но рекомендуем воспользоваться решением от наших партнеров:
    * Интегрироваться с  операторам фискальных данных [АТОЛ.](https://online.atol.ru/lk/Account/Register?partnerUid=18583cd5-dae2-4fb1-a98b-f4b80d891eb0)
    * Воспользоваться решениями [Paykeeper.](https://raiffeisen-processing.ru)

    # Общие схемы работы

    ## Схема работы с формой

    B случае если прием платежей планируется на сайте или в мобильном приложение рекомендуем использовать [протокол с отображением QR на нашей форме.](https://e-commerce.raiffeisen.ru/api/doc/ecom.html)

    <a href='images/E-commerce Raiffeisenbank scheme.png' target='_blank'><img src='images/E-commerce Raiffeisenbank scheme.png'></a>

    ## Схема работы по прямому протоколу СБП

    Если прием платежей реализуется в физических точках или по каким либо причинам вам не подходит решение с нашей формой , можете использовать протокол описанный ниже.

    На рисунке изображена схема информационного обмена c партнёром при реализации платежа по QR-коду.

    <a href='images/SBP API Raiffeisenbank scheme.png' target='_blank'><img src='images/SBP API Raiffeisenbank scheme.png'></a>

    ## Схема работы с подписками

    Вы можете предлагать клиенту привязать оплату по СБП к программе лояльности или к аккаунту в вашем сервисе. Для этого вы можете сгенерировать QR и отобразить его клиенту, либо перенаправить его на специальную ссылку, которая есть в ответе на запрос генерации QR на подписку.

    После по уникальному идентификатору подписки вы можете обращаться за безакцептным списание средств с клиента за ваши товары и услуги.

    <a href='images/subscriptions.png' target='_blank'><img src='images/subscriptions.png'></a>

    ## Схема работа по подпискам с оплатой

    Так же есть схема когда одним запросом получается QR на получение оплаты и заведения подписки.

    В данном случае клиент проводит оплату и после ему отображается окно с предложением подключения подписки.

    Клиент может провести оплату, но отказаться от подписки. Так же клиент может провести оплату с приложения банка, который не подклбчен к сервису подписок.

    <a href='images/subscriptionsandpayment.png' target='_blank'><img src='images/subscriptionsandpayment.png'></a>
    # Готовые решения

    ## SDK
    Для более быстрой интеграции вы можете вопоспользоваться нашими SDK:
    * [Java](https://github.com/Raiffeisen-DGTL/sbp-sdk-java)

    ## CMS

    На данный момент вы можете воспользоваться готовыми решениями нашего партнера [Paykeeper.](https://raiffeisen-processing.ru)

    # Описание API
    Bзаимодействие осуществляется по протоколу HTTP с использованием методов GET/POST (в описании каждого запроса явно указан требуемый метод и адрес).

    POST-запросы используют JSON-аргументы, GET-запросы работают со строками запросов.

    API всегда возвращает ответ в формате JSON, независимо от типа запроса.

    Ответ любого метода содержит код сообщения (code). Если в процессе обработки любого запроса произойдет логическая ошибка, API вернет дополнительно описание ошибки (message).

    Продовый хост: https://e-commerce.raiffeisen.ru

    Тестовый хост: https://test.ecom.raiffeisen.ru

    ## Авторизация
    Запросы типа:
    * получение информации по QR-коду
    * получение информации по платежу
    * оформление возврата по платежу
    * получение информации по возврату

     авторизуются посредством секретного ключа API (SECRET_KEY). Параметр авторизации указывается в заголовке Authorization, значение которого формируется как "Bearer SECRET_KEY".

    Для получения тестовых данных для интеграции необходимо обратиться по адресу:  ecom@raiffeisen.ru

    Посмотреть боевой sbpMerchantId и сгенерировать ключи можно в [личном кабинете](https://www.rbo.raiffeisen.ru/acquiring/mcp#/) во вкладке "Прием платежей"

    <div align=center><a href='images/createKey.png' target='_blank'><img src='images/createKey.png'></a></div>

    # Мобильная версия и приложение
    При работе в мобильной версии сайта или приложении необходимо перенаправлять клиента по url из параметра payload.

    У клиента откроется мобильное приложение банка или список выбора банка.

    # Тестирование

    ## Приложение для тестирования

    Для полного цикла тестирования оплаты Райффайзенбанк предоставляет возможность использования демо-приложения для сканирования QRC от имени покупателя по адресу:
    https://pay.raif.ru/pay/rfuture/

    Указанный адрес можно открыть в браузере любого устройства, где есть камера. Никакого дополнительного софта/плагинов устанавливать не нужно. Далее нажать на значок СБП (при необходимости разрешить браузеру доступ к камере) и поднести к ней изображение QR-кода.
    Если камера не открылась, проверьте что в адресе указан проткол https.

    ### Пример экранов демо-приложения

    <div align=center><a href='images/example-sbp-1.png' target='_blank'><img src='images/example-sbp-1.png'></a></div>

servers:
  - url: https://e-commerce.raiffeisen.ru/api
    description: Production API
  - url: https://test.ecom.raiffeisen.ru/api
    description: Sandbox API
tags:
  - name: qr-controller
    x-displayName: 'Работа с QR-кодом'
    description: |
      Для реализации взаимодействия с партнёром Райффайзенбанк предоставляет API из следующих запросов:
        * регистрация QR-кода,
        * получение данных по зарегистрированному ранее QR-коду,
        * получение данных по платежу,
        * возврат денежных средств - может быть выполнен в любое время после проведения оплаты на полную сумму платежа или частичную. Однако сумма частичных запросов на возврат не должна превышать общую сумму заказа.
        * получение информации по возврату.

        [Схема взаимодействия.](#section/Obshaya-shema-raboty/Shema-raboty-po-pryamomu-protokolu-SBP)

  - name: qr-subscription
    x-displayName: 'Подписки'
    description: |
      Для подключения подписок необходимо дополнительная настройка со стороны банка.
        Для реализации возможны два сценария :
        * отдельно подписка с последующими платежами

        [Схема взаимодействия.](#section/общие-схемы-работы/схема-работы-с-подписками)
        * подписка с оплатой

        [Схема взаимодействия.](#section/общие-схемы-работы/схема-работа-по-подпискам-с-оплатой)

  - name: Callback
    x-displayName: 'Уведомления'
    description: |
      Для информирования ТСП о проведенных платежах могут использоваться HTTP-уведомления на адрес, указанный в его настройках.

      Боевой адрес можно указать в [личном кабинете](https://www.rbo.raiffeisen.ru/acquiring/mcp#/) во вкладке "Прием платежей"

      <div align=center><a href='images/callback.png' target='_blank'><img src='images/callback.png'></a></div>

      Так же адрес для тестовой и боевой среды можно указать с помощью [метода в API](#operation/postsettingsUrl).

      Для партнёра уведомление представляет собой входящий POST-запрос, который использует JSON-структуру.

      Уведомление считается принятым, если получатель ответил на запрос кодом HTTP 200.

      Ответы с любыми другими HTTP-кодами будут считаться невалидными.
      Повторные попытки отправки будут проводиться в течение суток с нарастающим интервалом.

      Для проверки подлинности уведомления к данным добавляется подпись в заголовке  X-Api-Signature-SHA256, полученная на основе общего секретного ключа и контрольной строки (amount|sbpMerchantId|order|paymentStatus|transactionDate) с помощью HMAC-SHA-256.

      Уведомления отправляются с IP 193.28.44.23

  - name: Registry
    x-displayName: 'Реестр'
    description: |
      Для подключения отправки реестров необходимо написать на ecom@raiffeisen.ru

      Реестры по платежам отправляются на ежедневной основе.

      В случае отсуствия операций за день, реестр на следующий день не отправляется.

      Формат реестра:

      Наименование колонки | Значение
      --------|------------------
      Мерчант | Идентификатор в системе СБП
      Дата операции МСК | Дата и время проведения операции
      Тип | Тип операции
      id заказа | Id заказа в системе партнера (order)
      id возврата | Id возврата в системе партнера (refundId)
      Комментарий | Комментарий к заказу
      Способ оплаты | Instant Payment QR
      Данные оплаты | QR id
      id клиента | Маскированный код плательщика
      Сумма | Сумма транзакции
      Комиссия | Комиссия по транзакции
      Дополнительные поля | Дополнительная информация (Пока не используется)

      <a download='' target='_blank' href='images/SBPreport.csv'>Пример реестра</a>

  - name: Statement
    x-displayName: 'Выписка'
    description: |
      Выписку может выгрузить в банк-клиенте в следующих форматах:
      * <a download='' target='_blank' href='images/test_statement.pdf'>PDF</a>
      * <a download='' target='_blank' href='images/test_statement_1C.txt'>1C txt</a>
      * <a download='' target='_blank' href='images/test_statement.xml'>XML</a>

      В назначение платежа есть системиный префикс: номер проводки , тип операции , идентификатор мерчанта НСПК.
      В примерах выписки указаны стандартные назначение платежа, вы можете его изменить, для этого необходимо при генерации QR и возвратах передавать параметр paymentDetails с вашими данными, при этом  ваше значение будет идти после системного префикса.

  - name: Errors
    x-displayName: 'Справочник ошибок'
    description: |
      Ответ любого метода содержит код сообщения (code). Если в процессе обработки любого запроса произойдет логическая ошибка, API вернет описание ошибки (message).

      Описание основных ошибок:

      code | message
      ------------|------
      ERROR.ACCOUNT_IS_NOT_REGISTERED | Указан неверный счет. Проверьте его или удалите. Параметр является необязательным
      ERROR.INVALID_REQUEST | Не передан обязательный параметр
      ERROR.QR_EXPIRATION_DATE_NOT_VALID | Неверная дата истечения QR-кода
      ERROR.MERCHANT_NOT_REGISTERED | Партнер с ID MA0000000552 не зарегистрирован
      ERROR.ORDER_NUMBER_ALREADY_REGISTERED | QR-код с номером заказа ***, партнера MA0000000552 и успешными платежами уже зарегистрирован
      ERROR.INVALID_REQUEST | Передана некорректная сумма платежа
      ERROR.SBP_MERCHANT_ID_IS_MISSING | SbpMerchantId партнера не указан
      ERROR.DYNAMIC_QR_WITHOUT_AMOUNT | Не передана сумма для динамического QR-кода
      ERROR.INVALID_ORDER | В номере заказа поддерживаются A-z09_-.
      ERROR.NOT_FOUND | QR-код не найден у данного партнера
      ERROR.REFUND_INSUFFICIENT_FUNDS | Сумма возврата больше суммы остатка по платежу
      ERROR.INVALID_REQUEST | Сумма возврата не может быть меньше 1 копейки
      ERROR.REFUND_NOT_FOUND | Возврат с refundId *** не найден

  - name: 02.06.2021
    x-displayName: '02.06.2021'
    description: |
      * Добавили [новый метод отмены QR-кода](#operation/cancelUsingPOST_1)
      * Появилась [новая версия запроса на получения данных по QR-коду](#operation/getStatusUsingGET)

  - name: 06.07.2021
    x-displayName: '06.07.2021'
    description: |
      * Реализовали [сервис подписок](#operation/qr-subscription)

x-tagGroups:
  - name: API
    tags:
      - qr-controller
      - qr-subscription
      - Callback
  - name: Сверка
    tags:
      - Registry
      - Statement
  - name: Справочник
    tags:
      - Errors
  - name: История изменений
    tags:
      - 02.06.2021
      - 06.07.2021
paths:
  /sbp/v1/subscriptions:
    post:
      tags:
        - qr-subscription
      summary: Создание QR для подписки
      operationId: postSubscriptions
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: body
          name: subscription
          description: Метод позволяет зарегистрировать QR для последующей привязки счета клиента в выбранном банке. Для мобильного интерфейса используется диплинк, который возвращается в qr.payload. Создание подписки выполняется без авторизации, что позволяет использовать метод на сайте и в мобильном приложении.
          required: true
          schema:
            "$ref": "#/definitions/Subscription"
      responses:
        "200":
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/ResSubscription"
      deprecated: false

  /sbp/v1/subscriptions/{subscriptionId}:
    get:
      tags:
        - qr-subscription
      summary: Получение информации по подписке
      operationId: getSubscriptionsInfo
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer secret key
          required: true
        - name: subscriptionId
          in: path
          description: Идентификатор подписки
          required: true
          type: string
      responses:
        '200':
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/SubscriptionsInfo"
      deprecated: false

  /sbp/v1/qr/register:
    post:
      tags:
        - qr-controller
      summary: Регистрация QR
      operationId: registerUsingPOST_1
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: body
          name: payment
          description: Регистрация QR кода выполяется без авторизации, что позволяет сгенерировать его на сайте или приложении. Данный метод позволяет генерировать как статический QR кода , так и динамечкие QR кода. Так же с помощью данного метода вы можете сгенерировать QR код для оплаты с подпиской.
          required: true
          schema:
            "$ref": "#/definitions/Payment"
      responses:
        "200":
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/QR"
      deprecated: false
      x-codeSamples:
        - lang: 'cURL'
          source: |
            curl --location --request POST 'https://test.ecom.raiffeisen.ru/api/sbp/v1/qr/register' \
            --header 'Content-Type: application/json' \
            --data-raw '{
            "account": "40700000000000000000",
            "additionalInfo": "Доп информация",
            "amount": 1110,
            "currency": "RUB",
            "order": "1-22-333",
            "paymentDetails": "Назначение платежа",
            "qrType": "QRDynamic",
            "qrExpirationDate": "2023-07-22T09:14:38+03:00",
            "sbpMerchantId": "MA0000000552"
            }'
        - lang: 'Java'
          source: |
            String order = QRUtils.generateOrderNumber();

            QRDynamic qrCode = new QRDynamic(order, new BigDecimal(100));
            qrCode.setAccount("40700000000000000000");
            qrCode.setAdditionalInfo("Доп информация");
            qrCode.setPaymentDetails("Назначение платежа");
            qrCode.setQrExpirationDate("2023-07-22T09:14:38.107227+03:00");

            QRUrl response = client.registerQR(qrCode);

  /sbp/v2/qrs/{qrId}:
    delete:
      tags:
        - qr-controller
      summary: Отмена QR кода
      operationId: cancelUsingPOST_1
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer secret key
          required: true
        - name: qrId
          in: path
          description: qrId
          required: true
          type: string
      responses:
        "200":
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/EmptyBody"
      deprecated: false
      x-codeSamples:
        - lang: 'cURL'
          source: |
            curl --location --request DELETE 'https://test.ecom.raiffeisen.ru/api/sbp/v2/qrs/ADAC306DDBF443CA94EBE3FA85CA4872'\
            --header 'Authorization: Bearer eyJ0eXA***'
    get:
      tags:
        - qr-controller
      summary: Получение данных по зарегистрированному ранее QR-коду
      operationId: getStatusUsingGET
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer secret key
          required: true
        - name: qrId
          in: path
          description: qrId
          required: true
          type: string
      responses:
        '200':
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/QR2"
      deprecated: false
      x-codeSamples:
        - lang: 'cURL'
          source: |
            curl --location --request GET 'https://test.ecom.raiffeisen.ru/api/sbp/v2/qrs/AS6E5A7F9E3A4E648C536EC930AECDF6' \
            --header 'Authorization: Bearer eyJ0eXA***'

  /sbp/v1/qr/{qrId}/info:
    get:
      tags:
        - qr-controller
      summary: Получение данных по зарегистрированному ранее QR-коду
      operationId: getStatusUsingGETOld
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer secret key
          required: true
        - name: qrId
          in: path
          description: qrId
          required: true
          type: string
      responses:
        '200':
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/QR"
      deprecated: true
      x-codeSamples:
        - lang: 'cURL'
          source: |
            curl --location --request GET 'https://test.ecom.raiffeisen.ru/api/sbp/v1/qr/AS6E5A7F9E3A4E648C536EC930AECDF6/info' \
            --header 'Authorization: Bearer eyJ0eXA***'
        - lang: 'Java'
          source: |
            String qrIdString = "...";
            QRId id = new QRId(qrIdString);
            QRUrl response = client.getQRInfo(id);

  /sbp/v1/qr/{qrId}/payment-info:
    get:
      tags:
        - qr-controller
      summary: Получение информации по платежу
      operationId: getPaymentInfoUsingGET
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer secret key
          required: true
        - name: qrId
          in: path
          description: qrId
          required: true
          type: string
      responses:
        '200':
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/PaymentInfo"
      deprecated: false
      x-codeSamples:
        - lang: 'cURL'
          source: |
            curl --location --request GET 'https://test.ecom.raiffeisen.ru/api/sbp/v1/qr/AS6E5A7F9E3A4E648C536EC930AECDF6/payment-info' \
            --header 'Authorization: Bearer eyJ0eXA***'
        - lang: 'Java'
          source: |
            String qrIdString = "...";
            QRId id = new QRId(qrIdString);
            PaymentInfo response = client.getPaymentInfo(id);

  /sbp/v1/refund:
    post:
      tags:
        - qr-controller
      summary: Оформление возврата по платежу
      operationId: postRefund_SBP
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer secret key
          required: true
        - in: body
          name: Refund
          description: Refund
          required: true
          schema:
            "$ref": "#/definitions/Refund"
      responses:
        "200":
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/RefundResponse"
      deprecated: false
      x-codeSamples:
        - lang: 'cURL'
          source: |
            curl --location --request POST 'https://test.ecom.raiffeisen.ru/api/sbp/v1/refund' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Bearer eyJ0eXA***' \
            --data-raw '{
            "amount": 150,
            "order": "test_order_007",
            "paymentDetails": "Test",
            "refundId": "test_refundId_007",
            "transactionId": 41
            }'
        - lang: 'Java'
          source: |
            BigDecimal moneyAmount = new BigDecimal(150);
            String orderInfo = "...";
            String refundId = "...";
            long transactionId = ...;

            RefundInfo refundInfo = new RefundInfo(moneyAmount, orderInfo, refundId);

            RefundStatus response = client.refundPayment(refundInfo);

  /sbp/v1/refund/{refundId}:
    get:
      tags:
        - qr-controller
      summary: Получение информации по возврату
      operationId: getRefund_SBP
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer secret key
          required: true
        - name: refundId
          in: path
          description: Уникальный идентификатор запроса на возврат
          required: true
          type: string
      responses:
        "200":
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/RefundResponse"
      deprecated: false
      x-codeSamples:
        - lang: 'cURL'
          source: |
            curl --location --request GET 'https://test.ecom.raiffeisen.ru/api/sbp/v1/refund/111112222200046' \
            --header 'Authorization: Bearer eyJ0eXA***'
        - lang: 'Java'
          source: |
            String refundIdString = "...";
            RefundId refundId = new RefundId(refundIdString);

            RefundStatus response = client.getRefundInfo(refundId);

  <URL обработчика уведомлений по платежам на стороне партнёра>:
    post:
      tags:
        - Callback
      summary: Уведомление о статусе платежа
      operationId: sendCallback
      consumes:
        - application/json;charset=UTF-8
      parameters:
        - name: Callback
          in: body
          description: Callback
          required: true
          schema:
            "$ref": "#/definitions/Callback"
      responses:
        '200':
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/EmptyBody"
      deprecated: false

  <URL обработчика уведомлений о подписках на стороне партнёра>:
    post:
      tags:
        - Callback
      summary: Уведомление о статусе подписки
      operationId: sendCallbackSubscriptions
      consumes:
        - application/json;charset=UTF-8
      parameters:
        - name: CallbackSubscriptions
          in: body
          description: Callback
          required: true
          schema:
            "$ref": "#/definitions/CallbackSubscriptions"
      responses:
        '200':
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/EmptyBody"
      deprecated: false

  /settings/v1/callback:
    post:
      tags:
        - Callback
      summary: Настройка url для callback
      operationId: postsettingsUrl
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer secret key
          required: true
        - in: body
          name: callbackUrl
          description: Url для приема уведомлений
          required: true
          schema:
            "$ref": "#/definitions/CallBackSettings"
      responses:
        "200":
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/CallBackSettings"
      deprecated: false
  <Response>:
    post:
      tags:
        - Errors
      summary: Errors
      operationId: ResponseError
      consumes:
        - application/json;charset=UTF-8
      parameters:
        - name: Error
          in: body
          description: Error
          schema:
            "$ref": "#/definitions/Errors"
      responses:
        "200":
          schema:
            "$ref": "#/definitions/EmptyBody"

  /sbp/v1/subscriptions/{subscriptionId}/orders:
    post:
      tags:
        - qr-subscription
      summary: Запрос на совершение платежа по подписке
      operationId: postSubscriptionsPayment
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer secret key
          required: true
        - name: subscriptionId
          in: path
          description: Идентификатор подписики
          required: true
          type: string
        - in: body
          name: subscription
          description: Метод позволяет создать заказ и инициировать списание со счета клиента в рамках созданной подписки. При успешном списании будет направлено стандартное уведомление об оплате.
          required: true
          schema:
            "$ref": "#/definitions/SubscriptionPayment"
      responses:
        "200":
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/SubscriptionsPaymentInfo"
      deprecated: false

  /sbp/v1/subscriptions/{subscriptionId}/orders/{id}:
    get:
      tags:
        - qr-subscription
      summary: Проверка статуса платежа по подписке
      operationId: getSubscriptionsPaymentInfo
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer secret key
          required: true
        - name: subscriptionId
          in: path
          description: Идентификатор подписки
          required: true
          type: string
        - name: id
          in: path
          description: Идентификатор заказа
          required: true
          type: string
      responses:
        '200':
          description: Ответ с успешным результатом.
          schema:
            "$ref": "#/definitions/SubscriptionsPaymentInfo"
      deprecated: false
definitions:
  Payment:
    type: object
    required:
      - qrType
      - sbpMerchantId
      - order
    properties:
      account:
        type: string
        description: Счет для зачисления. Параметр используется, если необходимо разносить платежи на разные счета. Не используется в тестовой среде.
        maxLength: 20
        example: 40700000000000000001
      additionalInfo:
        type: string
        description: Дополнительная информация, заполняемая по желанию партнёра при генерации QR-кода. Может быть доступна для пользователя в зависимости от банка.
        maxLength: 140
        example: Доп информация
      amount:
        type: number
        description: Сумма в рублях. Обязательно для заполнения, если Тип QR = QRDynamic
        example: 1110.00
      currency:
        type: string
        description: Валюта платежа. Обязательно для заполнения, если заполнена сумма.
        enum:
          - RUB
        maxLength: 3
        example: RUB
      order:
        type: string
        description: Уникальный идентификатор заказа в системе партнёра. Формат A-z0-9-',"_:.,
        maxLength: 40
        example: 1-22-333
      paymentDetails:
        type: string
        description: Назначение платежа. Необязательно для заполнения.
        maxLength: 185
        example: Назначение платежа
      qrType:
        type: string
        description: Тип QR-кода. QRStatic - статический  QR-код. Может быть оплачен несколько раз. Если будет зарегистрирован статический QR-код без суммы - клиент самостоятельно укажет сумму в мобильном приложении. Подходит для размещения на кассе и благотворительных фондов. QRDynamic - динамический QR-код. Может быть оплачен только один раз. Сумма оплаты фиксированная, передается в момент регистрации QR-кода, клиент не может ее изменить. Подходит для интернет-магазинов и онлайн-сервисов.
        enum:
          - QRStatic
          - QRDynamic
        example: QRDynamic
      qrExpirationDate:
        type: string
        format: YYYY-MM-DD ТHH24:MM:SS±HH:MM
        description: Опциональный параметр для указания срока действия QR-кода. При заполнении не может быть меньше текущей даты и времени. После истечения срока действия QR-кода оплату по нему провести нельзя. Если Тип QR = QRDynamic и поле не заполнено, срок действия будет 3 суток. ISO 8601
        example: '2023-07-22T09:14:38+03:00'
      sbpMerchantId:
        type: string
        description: Идентификатор зарегистрированного партнёра в СБП
        maxLength: 12
        example: MA0000000552
      subscription:
        type: object
        properties:
          id:
            type: string
            description: Идентификатор подписки.
            example: '120059'
          purpose:
            type: string
            description: Описание подписки которое увидит клиент в приложении банка.
            example: Подписка на услуги
    title: Payment
  PaymentInfo:
    type: object
    properties:
      additionalInfo:
        type: string
        description: Дополнительная информация, заполняемая по желанию партнёра при генерации QR-кода. Может быть доступна для пользователя в зависимости от банка.
        example: 'Доп информация'
      paymentPurpose:
        type: string
        description: Назначение платежа.
        example: 'Назначение платежа'
      amount:
        type: number
        description: Сумма платежа
        example: 12399.00
      code:
        type: string
        description: Код сообщения
        maxLength: 140
        example: SUCCESS
      createDate:
        type: string
        format: date-time
        description: Время формирования заявки
        example: '2020-01-31T09:14:38.107227+03:00'
      currency:
        type: string
        description: Валюта платежа
        maxLength: 3
        enum:
          - RUB
      merchantId:
        type: number
        format: int32
        description: Уникальный идентификатор партнёра, выданный банком
        example: 123
      order:
        type: string
        description: Уникальный идентификатор заказа в системе партнёра.
        example: '282a60f8-dd75-4286-bde0-af321dd081b3'
      paymentStatus:
        type: string
        description: Статус платежа
        enum:
          - SUCCESS
          - DECLINED
          - NO_INFO
          - IN_PROGRESS
        example: SUCCESS
      qrId:
        type: string
        description: Уникальный идентификатор QRC, выданный СБП при запросе генерации QRC
        example: AD100051KNSNR64I98CRUJUASC9M72QT
      sbpMerchantId:
        type: string
        description: Уникальный идентификатор партнёра, выданный СБП
        example: MA0000000552
      transactionDate:
        type: string
        format: date-time
        description: Дата и время проведения платежа
        example: '2019-07-11T17:45:13.109227+03:00'
      transactionId:
        type: integer
        format: int64
        description: Идентификатор операции платежа в Райффайзенбанке
        example: 23
      qrExpirationDate:
        type: string
        format: YYYY-MM-DD ТHH24:MM:SS±HH:MM
        description: Время истечения срока жизни QR
        example: '2020-01-15T13:00:40+03:00'
    title: PaymentInfo
  QR:
    type: object
    properties:
      code:
        type: string
        maxLength: 140
        description: Код сообщения
        example: 'SUCCESS'
      qrId:
        type: string
        description: Идентификатор зарегистрированного QRС в СБП
        maxLength: 32
        example: 'AD100004BAL7227F9BNP6KNE007J9B3K'
      payload:
        type: string
        description: Данные для самостоятельной генерации изображения зарегистрированного QR-кода в СБП. При открытии с мобильного устройства, запускает банковское приложение клиента или список выбора банка.
        maxLength: 999
        example: 'https://qr.nspk.ru/AD100004BAL7227F9BNP6KNE007J9B3K?type=02&bank=100000000007&sum=1&cur=RUB&crc=AB75'
      qrUrl:
        type: string
        description: URL с изображением зарегистрированного QR-кода в СБП
        maxLength: 999
        example: 'https://e-commerce.raiffeisen.ru/api/sbp/v1/qr/AD100004BAL7227F9BNP6KNE007J9B3K/image'
    title: QR
  QR2:
    type: object
    properties:
      qrId:
        type: string
        description: Идентификатор зарегистрированного QRС в СБП
        maxLength: 32
        example: 'AD100004BAL7227F9BNP6KNE007J9B3K'
      qrStatus:
        type: string
        description: Код состояния QR кода
        enum:
          - NEW
          - IN_PROGRES
          - CANCELLED
          - EXPIRED
          - PAID
        example: NEW
      qrExpirationDate:
        type: string
        format: YYYY-MM-DD ТHH24:MM:SS±HH:MM
        description: Опциональный параметр для указания срока действия QR-кода. При заполнении не может быть меньше текущей даты и времени. После истечения срока действия QR-кода оплату по нему провести нельзя. Если Тип QR = QRDynamic и поле не заполнено, срок действия будет 3 суток. ISO 8601
        example: '2023-07-22T09:14:38+03:00'
      payload:
        type: string
        description: Данные для самостоятельной генерации изображения зарегистрированного QR-кода в СБП. При открытии с мобильного устройства, запускает банковское приложение клиента или список выбора банка.
        maxLength: 999
        example: 'https://qr.nspk.ru/AD100004BAL7227F9BNP6KNE007J9B3K?type=02&bank=100000000007&sum=1&cur=RUB&crc=AB75'
      qrUrl:
        type: string
        description: URL с изображением зарегистрированного QR-кода в СБП
        maxLength: 999
        example: 'https://e-commerce.raiffeisen.ru/api/sbp/v1/qr/AD100004BAL7227F9BNP6KNE007J9B3K/image'
    title: QR
  Refund:
    required:
      - amount
      - order
      - sbpMerchantId
      - refundId
    type: object
    properties:
      amount:
        type: number
        description: Сумма возврата в рублях
        example: 150
      order:
        type: string
        description: Уникальный идентификатор заказа в системе партнёра, используется для возвратов по динамическому QR
        maxLength: 40
        example: 'test_order_007'
      paymentDetails:
        type: string
        description: Дополнительные детали платежа
        maxLength: 180
        example: 'Test'
      refundId:
        type: string
        description: Уникальный идентификатор запроса на возврат
        maxLength: 40
        example: 'test_refundId_007'
      transactionId:
        type: number
        description: Идентификатор операции платежа в Райффайзенбанке, используется для возвратов по статическому QR
        example: 41
    title: Refund
  RefundResponse:
    type: object
    properties:
      code:
        type: string
        description: Код состояния http запроса
        example: 'SUCCESS'
      amount:
        type: number
        description: Сумма возврата в рублях
        example: 150
      refundStatus:
        type: string
        description: Код состояния запроса на возврат
        enum:
          - IN_PROGRESS
          - COMPLETED
          - DECLINED
        example: IN_PROGRESS
    title: RefundResponse
  Callback:
    type: object
    properties:
      transactionId:
        type: number
        description: Идентификатор операции платежа в Райффайзенбанке
        example: 41
      qrId:
        type: string
        description: Уникальный идентификатор QR-кода, выданный СБП при запросе генерации QR-кода
        maxLength: 32
        example: AS100032PQ7739G58NCQ457RA2OG82JP
      sbpMerchantId:
        type: string
        description: Идентификатор зарегистрированного ТСП в СБП
        maxLength: 12
        example: MA0000000279
      merchantId:
        type: number
        description: Идентификатор ТСП в Райффайзенбанке
        example: 1780672001
      amount:
        type: number
        description: Сумма в рублях
        example: 10
      currency:
        type: string
        description: Валюта платежа
        maxLength: 3
        example: RUB
      transactionDate:
        type: string
        format: YYYY-MM-DD ТHH24:MM:SS±HH:MM
        description: Дата и время проведения платежа
        example: '2020-01-15T16:01:49.043924+03:00'
      paymentStatus:
        type: string
        description: Статус проведения платежа
        example: SUCCESS
      additionalInfo:
        type: string
        description: Дополнительная информация, заполняемая по желанию ТСП при генерации QR-кода.  Может быть доступна для пользователя в зависимости от банка.
        maxLength: 140
        example: Some info
      order:
        type: string
        description: Уникальный идентификатор заказа в системе партнёра. Обязательно, если Тип QR = QRDynamic
        maxLength: 40
        example: testOrder
      createDate:
        type: string
        format: YYYY-MM-DD ТHH24:MM:SS±HH:MM
        description: Время формирования заявки
        example: '2020-01-15T13:00:40+03:00'
    title: Callback
  CallBackSettings:
    type: object
    properties:
      callbackUrl:
        type: string
        description: Url для приема уведомлений
        example: 'https://yoururl.ru'
    title: callbackSettings
  Errors:
    type: object
    properties:
      code:
        type: string
        description: Код сообщения
        example: 'ERROR.NOT_FOUND'
      message:
        type: string
        description: Описание ошибки
        example: 'QR не был оплачен'
    title: Error
  EmptyBody:
    type: object
  Subscription:
    type: object
    properties:
      id:
        type: string
        description: Идентификатор подписки.
        example: '120059'
      subscriptionPurpose:
        type: string
        description: Описание подписки которое увидит клиент в приложении банка.
        example: Подписка на услуги
      sbpMerchantId:
        description: Идентификатор зарегистрированного партнёра в СБП
        maxLength: 12
        example: MA0000000552
  ResSubscription:
    type: object
    properties:
      id:
        type: string
        description: Идентификатор подписки.
        example: '120059'
      createDate:
        type: string
        format: date-time
        description: Время формирования заявки
        example: '2020-01-31T09:14:38.107227+03:00'
      status:
        enum:
          - INACTIVE
          - SUBSCRIBED
          - UNSUBSCRIBED
        example: 'INACTIVE'
      qr:
        type: object
        properties:
          id:
            type: string
            description: Уникальный идентификатор QR кода
            example: AD100004BAL7227F9BNP6KNE007J9B3K
          payload:
            type: string
            description: Данные для самостоятельной генерации изображения зарегистрированного QR-кода в СБП. При открытии с мобильного устройства, запускает банковское приложение клиента или список выбора банка.
            example: 'https://sub.nspk.ru/AS3D33FC7B034DEEA8A365142E1DE737?type=03&bank=10000001&crc=C08B'
          url:
            type: string
            description: URL с изображением зарегистрированного QR-кода в СБП
            example: 'https://test.ecom.raiffeisen.ru/api/sbp/v1/qr/AS3D33FC7B034DEEA8A365142E1DE737/image'
  SubscriptionsInfo:
    type: object
    properties:
      id:
        type: string
        description: Идентификатор подписки.
        example: '120059'
      bank:
        type: string
        description: Идентификатор банка в котором осуществленна подписка.
        example: 'someBank'
      createDate:
        type: string
        format: date-time
        description: Время формирования заявки
        example: '2020-01-31T09:14:38.107227+03:00'
      status:
        enum:
          - INACTIVE
          - SUBSCRIBED
          - UNSUBSCRIBED
        example: 'INACTIVE'
      qr:
        type: object
        properties:
          id:
            type: string
            description: Уникальный идентификатор QR кода
            example: AD100004BAL7227F9BNP6KNE007J9B3K
          payload:
            type: string
            description: Данные для самостоятельной генерации изображения зарегистрированного QR-кода в СБП. При открытии с мобильного устройства, запускает банковское приложение клиента или список выбора банка.
            example: 'https://sub.nspk.ru/AS3D33FC7B034DEEA8A365142E1DE737?type=03&bank=10000001&crc=C08B'
          url:
            type: string
            description: URL с изображением зарегистрированного QR-кода в СБП
            example: 'https://test.ecom.raiffeisen.ru/api/sbp/v1/qr/AS3D33FC7B034DEEA8A365142E1DE737/image'
  CallbackSubscriptions:
    type: object
    properties:
      event:
        type: string
        description: Тип уведомления.
        example: 'subscription'
      subscription:
        type: object
        properties:
          id:
            type: string
            description: Идентификатор подписки.
            example: '120059'
          bank:
            type: string
            description: Идентификатор банка в котором осуществленна подписка.
            example: 'someBank'
          createDate:
            type: string
            format: date-time
            description: Время формирования заявки
            example: '2020-01-31T09:14:38.107227+03:00'
          status:
            example: 'SUBSCRIBED'
          qr:
            type: object
            properties:
              id:
                type: string
                description: Уникальный идентификатор QR кода
                example: AD100004BAL7227F9BNP6KNE007J9B3K
              payload:
                type: string
                description: Данные для самостоятельной генерации изображения зарегистрированного QR-кода в СБП. При открытии с мобильного устройства, запускает банковское приложение клиента или список выбора банка.
                example: 'https://sub.nspk.ru/AS3D33FC7B034DEEA8A365142E1DE737?type=03&bank=10000001&crc=C08B'
              url:
                type: string
                description: URL с изображением зарегистрированного QR-кода в СБП
                example: 'https://test.ecom.raiffeisen.ru/api/sbp/v1/qr/AS3D33FC7B034DEEA8A365142E1DE737/image'
  SubscriptionPayment:
    type: object
    properties:
      account:
        type: string
        description: Счет для зачисления. Параметр используется, если необходимо разносить платежи на разные счета. Не используется в тестовой среде.
        maxLength: 20
        example: 40700000000000000001
      additionalInfo:
        type: string
        description: Дополнительная информация, заполняемая по желанию партнёра. Может быть доступна для пользователя в зависимости от банка.
        maxLength: 140
        example: Доп информация
      amount:
        type: number
        description: Сумма в рублях.
        example: 1110.00
      currency:
        type: string
        description: Валюта платежа.
        enum:
          - RUB
        maxLength: 3
        example: RUB
      order:
        type: string
        description: Уникальный идентификатор заказа в системе партнёра. Формат A-z0-9-',"_:.,
        maxLength: 40
        example: 1-22-333
      paymentDetails:
        type: string
        description: Назначение платежа. Необязательно для заполнения.
        maxLength: 185
        example: Назначение платежа
    title: SubscriptionPayment
  SubscriptionsPaymentInfo:
    type: object
    properties:
      additionalInfo:
        type: string
        description: Дополнительная информация, заполняемая по желанию партнёра при генерации QR-кода. Может быть доступна для пользователя в зависимости от банка.
        example: 'Доп информация'
      paymentDetails:
        type: string
        description: Назначение платежа.
        example: 'Назначение платежа'
      amount:
        type: number
        description: Сумма платежа
        example: 12399.00
      currency:
        type: string
        description: Валюта платежа
        maxLength: 3
        enum:
          - RUB
      order:
        type: string
        description: Уникальный идентификатор заказа в системе партнёра.
        example: '282a60f8-dd75-4286-bde0-af321dd081b3'
      paymentStatus:
        type: string
        description: Статус платежа
        enum:
          - SUCCESS
          - DECLINED
          - IN_PROGRESS
        example: SUCCESS
      qrId:
        type: string
        description: Уникальный идентификатор QRC, выданный СБП при запросе генерации QRC
        example: AD100051KNSNR64I98CRUJUASC9M72QT
      sbpMerchantId:
        type: string
        description: Уникальный идентификатор партнёра, выданный СБП
        example: MA0000000552
    title: SubscriptionsPaymentInfo
